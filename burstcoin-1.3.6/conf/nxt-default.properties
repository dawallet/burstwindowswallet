############################################################
# Do not modify this file.  Instead, create a              #
# nxt.properties file and make your changes there.         #
# They will overwrite the defaults!                        #
############################################################

#### PEER NETWORKING ####

# Announce my IP address/hostname to peers and allow them to share it with other peers.
# If disabled, peer networking servlet will not be started at all.
nxt.shareMyAddress=true

# Port for incoming peer to peer networking requests, if enabled.
nxt.peerServerPort=8123

# Host interface on which to listen for peer networking requests, default all.
# Use 0.0.0.0 to listen on all IPv4 interfaces or :: to listen on all IPv4 and IPv6 interfaces
nxt.peerServerHost=0.0.0.0

# My externally visible IP address or host name, to be announced to peers.
# It can optionally include a port number, which will also be announced to peers,
# and may be different from nxt.peerServerPort (useful if you do port forwarding behind a router).
nxt.myAddress=

# My platform, to be announced to peers.
nxt.myPlatform=AIO

# My hallmark, if available.
nxt.myHallmark=

# A list of well known peer addresses / host names, separated by '; '.
# If not set, a random selection of nxtcrypto.org and nxtbase.com nodes is used.
nxt.wellKnownPeers=68.69.164.120; 144.76.4.10; 192.99.183.10; 176.31.105.109; 89.79.131.170; 204.45.61.123; 147.135.136.189; 144.76.36.175; 206.51.141.21; 52.178.12.156; 64.22.104.188; 52.191.135.100; 80.150.206.52; 176.9.47.157; 62.75.188.216; 51.15.61.5; 13.65.148.45; 115.87.103.110; 51.255.115.70; 37.97.40.203; 73.169.250.130; 192.210.215.146; 87.155.221.164; 5.39.93.90; 208.98.201.249; 210.61.217.206; 37.205.11.73; 198.100.149.133; 192.99.47.76; 52.233.193.5; 69.136.69.83; 91.40.16.67; 216.8.195.30; 213.239.207.110; 213.93.182.184; 99.6.109.189; 118.34.38.59; 51.15.172.186; 52.187.61.67; 91.121.159.44; 23.237.23.0; 78.130.235.166; 59.110.224.129; 46.4.14.190; 212.24.103.82; 104.128.234.137; 195.230.182.182; 199.127.199.148; 73.189.187.90; 91.211.191.15; 164.106.37.6; 62.210.254.125; 46.223.93.167; 73.119.30.169; 101.100.184.199; 205.209.140.10; 85.216.33.202; 144.76.71.172; 173.212.235.98; 128.171.156.20; 67.11.172.218; 84.17.23.54; 5.35.21.212; 77.53.194.184; 89.14.68.85; 212.98.92.236; 103.10.61.51; 85.217.171.59; 141.52.39.244; 114.55.91.167; 87.98.244.116; 77.66.66.251; 213.250.22.35; 69.143.93.163; 169.239.183.229; 5.9.50.158; 81.6.54.180; 95.165.132.145; 13.82.44.192; 31.208.216.74; 88.99.42.243; 68.65.187.147; 218.38.28.183; 24.251.116.86; 191.37.200.56; 174.58.241.214; 59.19.218.99; 121.135.232.13; 78.47.243.175; 82.39.181.96; 68.189.58.26; 45.37.205.144; 109.238.113.156; 108.34.167.31; 213.32.102.141; 138.68.191.196; 88.99.166.52; 54.71.247.96; 134.255.227.168; 210.6.208.175; 60.234.58.107; 83.170.94.221; 87.122.220.139; 78.94.159.54; 136.243.54.19; 183.106.157.197; 83.170.94.222; 204.12.255.242; 64.34.149.34; 77.176.235.157; 46.129.42.93; 84.113.147.25; 162.208.50.165; 202.77.99.211; 82.135.154.9; 81.83.5.50; 172.103.173.18; 40.125.164.168; 173.249.18.113; 32.214.109.70; 82.6.206.235; 85.25.200.125; 78.47.51.95; 163.172.161.152; 94.130.19.120; 31.209.54.26; 88.91.100.55; 51.140.79.180; 73.93.134.26; 85.195.246.182; 78.240.13.44; 93.88.74.26; 173.199.70.198; 174.138.59.58; 62.173.142.55; 108.61.180.135; 89.218.176.230; 211.202.125.123; 69.136.113.203; 82.247.98.128; 94.100.221.211; 24.192.163.197; 92.214.128.105; 50.4.239.215; 39.106.117.124; 46.237.194.160; 45.76.115.113; 185.203.117.157; 118.217.216.188; 108.238.244.144; 185.223.30.43; 51.15.80.207; 185.203.116.80; 46.197.201.74; 90.126.40.114; 80.241.221.231; 112.161.84.93; 80.122.157.25; 115.199.110.73; 79.117.241.104; 61.223.81.105; 13.72.109.3; 35.182.142.103; 148.251.218.140; 5.230.156.126; 100.8.96.71; 84.10.50.53; 165.227.230.29; 136.144.169.239; 87.73.32.184; 192.237.253.169; 92.206.55.19;

# These peers will always be sent rebroadcast transactions. They are also automatically added to wellKnownPeers, so no need for duplicates.
burst.rebroadcastPeers=92.43.104.34; a.storj.eu; 158.69.150.192

# Connect to this many well known peers before using the peer database to get connected faster.
# Set to 0 or comment out to disable.
burst.connectWellKnownFirst=10

# Known bad peers to be blacklisted
nxt.knownBlacklistedPeers=

# Peers used for testnet only.
nxt.testnetPeers=

# Maintain active connections with at least that many peers.
nxt.maxNumberOfConnectedPublicPeers=20

# Peer networking connect timeout for outgoing connections.
nxt.connectTimeout=4000

# Peer networking read timeout for outgoing connections.
nxt.readTimeout=8000

# Peer networking server idle timeout, milliseconds.
nxt.peerServerIdleTimeout=30000

# Use the peer hallmark to only connect with peers above the defined push/pull hallmark thresholds.
nxt.enableHallmarkProtection=false

# Hallmark threshold to use when sending data to peers.
nxt.pushThreshold=0

# Hallmark threshold to use when requesting data from peers.
nxt.pullThreshold=0

# Blacklist peers for 600000 milliseconds (i.e. 10 minutes by default).
nxt.blacklistingPeriod=600000

# Consider a new transaction or block sent after 10 peers have received it.
nxt.sendToPeersLimit=10

# Enable the Jetty Denial of Service Filter for the peer networking server.
nxt.enablePeerServerDoSFilter=true

# Compress Http responses for the peer networking server.
nxt.enablePeerServerGZIPFilter=true

# Use testnet, leave set to false unless you are really testing.
# Never unlock your real accounts on testnet! Use separate accounts for testing only.
# When using testnet, all custom port settings will be ignored,
# and hardcoded ports of 6874 (peer networking), 6875 (UI) and 6876 (API) will be used.
nxt.isTestnet=false

# Save known peers in the database
nxt.savePeers=true

# Set to false to disable use of the peers database. This will not delete saved peers.
nxt.usePeersDb=true

# Set to false to disable getting more peers from the currently connected peers. Only useful
# when debugging and want to limit the peers to those in peersDb or wellKnownPeers.
nxt.getMorePeers=true

# Set to true to run offline - do not connect to peers and do not listen for incoming peer
# connections. This is equivalent to setting nxt.shareMyAddress=false, nxt.wellKnownPeers=,
# nxt.testnetPeers= and nxt.usePeersDb=false, and if set to true overrides those properties.
nxt.isOffline=false

# Enable re-broadcasting of new transactions until they are received back from at least one
# peer, or found in the blockchain. This feature can optionally be disabled, to avoid the
# risk of revealing that this node is the submitter of such re-broadcasted new transactions.
nxt.enableTransactionRebroadcasting=true

# Do not allow the number of unconfirmed transactions in memory to exceed this value.
# If exceeded, the fee/size ratio of the transactions in a forged block is used to
# decide which to keep in the unconfirmed pool. Set to 0 or negative for no limit.
nxt.maxUnconfirmedTransactions=400

# Transactions that aren't confirmed for this many blocks start getting rebroadcast.
burst.rebroadcastAfter=5

# Transactions being rebroadcast get rebroadcast every this many blocks until they are confirmed.
burst.rebroadcastEvery=4

#### API SERVER ####

# Accept http/json API requests.
nxt.enableAPIServer=true

# Hosts from which to allow http/json API requests, if enabled.
nxt.allowedBotHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for http/json API requests.
nxt.apiServerPort=8125

# Host interface on which to listen for http/json API request, default localhost only.
# Set to 0.0.0.0 to allow the API server to accept requests from all network interfaces.
nxt.apiServerHost=127.0.0.1

# Idle timeout for http/json API request connections, milliseconds.
nxt.apiServerIdleTimeout=30000

# Directory with html and javascript files for the new client UI, and admin tools utilizing
# the http/json API.
nxt.apiResourceBase=html/ui

# Java API documentation directory, optional.
nxt.javadocResourceBase=html/doc

# Enable Cross Origin Filter for the API server.
nxt.apiServerCORS=false

# Enable SSL for the API server (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.apiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.apiServerEnforcePOST=true

# Compress Http responses for the API server.
nxt.enableAPIServerGZIPFilter=false


#### OLD NRS USER INTERFACE ####

# Enable the deprecated NRS user interface.
nxt.enableUIServer=false

# Hosts from which to allow NRS user interface requests, if enabled.
nxt.allowedUserHosts=127.0.0.1; localhost; [0:0:0:0:0:0:0:1];

# Port for NRS user interface server.
nxt.uiServerPort=7875

# Host interface for NRS user interface server, default localhost only.
# Set to 0.0.0.0 to allow the UI to be accessed on all network interfaces.
nxt.uiServerHost=127.0.0.1

# Idle timeout for NRS user interface server, milliseconds.
nxt.uiServerIdleTimeout=30000

# Directory with html and javascript files for the NRS client user interface.
nxt.uiResourceBase=html/nrs

# Enable Cross Origin Filter for NRS user interface server.
nxt.uiServerCORS=false

# Enable SSL for the NRS user interface (also need to set nxt.keyStorePath and nxt.keyStorePassword).
nxt.uiSSL=false

# Enforce requests that require POST to only be accepted when submitted as POST.
nxt.uiServerEnforcePOST=true



#### DEBUGGING ####

# Log file, will be overwritten at every restart.
#nxt.log=nxt.log
# The log file is now specified in logging.properties.

# Enable debug log output.
#nxt.debug=false
# Debug logging is now specified in logging properties.

# Include caller traceback in log messages.
nxt.enableLogTraceback=false

# Enable logging of exception stack traces.
nxt.enableStackTraces=true

# Enable logging of Jetty messages.
#nxt.debugJetty=false
# Jetty logging is now specified in logging properties.

# Used for debugging peer to peer communications.
nxt.communicationLoggingMask=0

# Track balances of the following accounts and related events for debugging purposes.
nxt.debugTraceAccounts=

# File name for logging tracked account balances.
nxt.debugTraceLog=nxt-trace.csv

# Separator character for trace log.
nxt.debugTraceSeparator=\t

# Quote character for trace log.
nxt.debugTraceQuote="

# Log changes to unconfirmed balances.
nxt.debugLogUnconfirmed=false


#### DATABASE ####

# Database connection JDBC url, see the H2 documentation for possible customizations.
# Append ;AUTO_SERVER=TRUE to enable automatic mixed mode access.
# The nxt_db folder is expected to be in the current working directory, will be created if missing.


# Database connection JDBC url to use with the test network, if isTestnet=true
nxt.dbUrl=jdbc:h2:./burst_db/burst;DB_CLOSE_ON_EXIT=False
nxt.dbUsername = sa
nxt.dbPassword = sa

# Database connection JDBC url to use with the test network, if isTestnet=true
nxt.testDbUrl=
nxt.testDUsername=
nxt.testDbPassword=

nxt.dbMaximumPoolSize=10

# Database connection timeout in seconds.
nxt.dbLoginTimeout=70

# Database default lock timeout in seconds.
nxt.dbDefaultLockTimeout=60

# Maximum simultaneous database connections.
nxt.maxDbConnections=30

# The memory allocated to database cache, in kB.
# If set to 0, defaults to 50 % of the memory available to the JVM.
nxt.dbCacheKB=0



#### JETTY ####

# Settings for the Jetty Denial Of Service Filter, used for the peer networking server only.
nxt.peerServerDoSFilter.maxRequestsPerSec=30
nxt.peerServerDoSFilter.delayMs=1000
nxt.peerServerDoSFilter.maxRequestMs=300000

# keystore file and password, required if uiSSL or apiSSL are enabled.
nxt.keyStorePath=keystore
nxt.keyStorePassword=password



#### Developers only ####

# Force re-validation of blocks and transaction at start.
nxt.forceValidate=false

# Force re-build of derived objects tables at start.
nxt.forceScan=false

# Print a list of peers having this version on exit.
nxt.dumpPeersVersion=

# Enable trimming of derived objects tables.
nxt.trimDerivedTables=true

# If trimming enabled, maintain enough previous height records to allow rollback of at least
# that many blocks. Must be at least 1440 to allow normal fork resolution. After increasing
# this value, a full re-scan needs to be done in order for previously trimmed records to be
# re-created and preserved.
nxt.maxRollback=1440

# Enable API requests used for blockchain and database manipulation.
nxt.enableDebugAPI=false

# Debug option for Testnet: Winning with every Deadline
burst.mockMining = false

# GPU Blocksync Acceleration / experimental !
burst.oclAuto=true
burst.oclVerify=false

# If 'burst.oclAuto=false' gpu must be specified
burst.oclPlatform=0
burst.oclDevice=0
burst.oclMemPercent=50
burst.oclHashesPerEnqueue=1000

# Enable metrics exposure for all SQL statements (useful for debugging, just slowing stuff down otherwise)
burst.enableSqlMetrics = false

# Uncomment this to limit the number of cpu cores the wallet sees. Default is all available.
# Nxt.cpuCores=1